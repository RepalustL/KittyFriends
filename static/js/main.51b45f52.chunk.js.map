{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","props","name","email","id","className","alt","src","CardList","robots","cardComponent","map","user","i","SearchBox","searchChange","type","placeholder","onChange","Scroll","style","overflowY","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","searchfield","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yOAgBeA,EAbF,SAACC,GAAS,IACfC,EAAmBD,EAAnBC,KAAMC,EAAaF,EAAbE,MAAOC,EAAMH,EAANG,GAErB,OACC,sBAAKC,UAAU,oDAAf,UACC,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAA1B,sBACrB,gCACC,mCAAMF,EAAN,OACA,kCAAKC,EAAL,cCSYK,EAhBE,SAAC,GAAa,IAAZC,EAAW,EAAXA,OAEZC,EAAgBD,EAAOE,KAAI,SAACC,EAAMC,GACvC,OAAQ,cAAC,EAAD,CAEPT,GAAIK,EAAOI,GAAGT,GACdF,KAAMO,EAAOI,GAAGX,KAChBC,MAAOM,EAAOI,GAAGV,OAHZU,MAMP,OACC,8BACKH,KCDQI,EAbG,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,aACnB,OACE,qBAAKV,UAAU,MAAf,SACD,uBACCA,UAAU,4BACVW,KAAK,SACLC,YAAY,iBACZC,SAAUH,OCCEI,EARA,SAAClB,GACf,OACC,qBAAKmB,MAAO,CAACC,UAAU,SAAUC,OAAO,sBAAuBC,OAAO,SAAtE,SACCtB,EAAMuB,YCkBMC,E,kDApBd,WAAYxB,GAAO,IAAD,8BACjB,cAAMA,IACDyB,MAAQ,CACZC,UAAU,GAHM,E,qDAOlB,SAAkBC,EAAOC,GACxBC,KAAKC,SAAS,CAACJ,UAAU,M,oBAI1B,WACC,OAAIG,KAAKJ,MAAMC,SACP,4DAEDG,KAAK7B,MAAMuB,a,GAjBOQ,aC8CZC,G,wDAxCd,aAAc,IAAD,8BACZ,gBAYDC,eAAiB,SAACC,GAChB,EAAKJ,SAAS,CAACK,YAAaD,EAAME,OAAOC,SAZ1C,EAAKZ,MAAM,CACVjB,OAAQ,GACR2B,YAAa,IAJF,E,qDAQb,WAAqB,IAAD,OACnBG,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAG,EAAKZ,SAAS,CAACtB,OAAQkC,S,oBAMtC,WAAS,IAAD,EACuBb,KAAKJ,MAA5BjB,EADA,EACAA,OAAQ2B,EADR,EACQA,YACTQ,EAAiBnC,EAAOoC,QAAO,SAAAC,GACpC,OAAOA,EAAM5C,KAAK6C,cAAcC,SAASZ,EAAYW,kBAEtD,OAAKtC,EAAOwC,OAIZ,sBAAK5C,UAAU,KAAf,UACC,oBAAIA,UAAU,KAAd,0BACA,cAAC,EAAD,CAAWU,aAAce,KAAKI,iBAC9B,cAAC,EAAD,UACC,cAAC,EAAD,UACC,cAAC,EAAD,CAAUzB,OAAQmC,WARb,6C,GAxBQZ,cCKHkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OACP,eAAC,IAAMC,WAAP,eACC,cAAC,EAAD,IADD,QAIAC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.51b45f52.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nconst Card = (props) =>{              // or const Card = ({name, email, id}) =>\r\n\tconst {name, email, id} = props;\r\n\r\nreturn (\r\n\t<div className='tc bg-light-red dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n\t\t<img alt='robots' src={`https://robohash.org/${id}200x200?set=set4`}/>\r\n\t\t<div>\r\n\t\t\t<h2> {name} </h2>\r\n\t\t\t<p> {email} </p>\r\n\t\t</div>\r\n\t</div>\r\n\t);\r\n}\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\n\r\nconst CardList = ({robots}) =>{\r\n\t\r\n\tconst cardComponent = robots.map((user, i) => {\r\n\t\treturn (<Card \r\n\t\t\tkey={i} \r\n\t\t\tid={robots[i].id} \r\n\t\t\tname={robots[i].name} \r\n\t\t\temail={robots[i].email}\r\n\t\t\t/>);\r\n\t})\r\n\treturn (\r\n\t\t<div>\r\n\t\t    {cardComponent}\r\n    \t</div>\r\n\t\t);\r\n}\r\nexport default CardList","import React from 'react'\r\n\r\nconst SearchBox = ({searchChange}) =>{\r\n\treturn (\r\n\t  <div className='pa2'>\r\n\t\t<input \r\n\t\t\tclassName='pa3 ba b--red bg-pink mt0'\r\n\t\t\ttype='search' \r\n\t\t\tplaceholder='Search kittens'\r\n\t\t\tonChange={searchChange}\t\r\n\t\t\t />\r\n\r\n\t  </div>\t\r\n\t\t);\r\n}\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) =>{\r\n\treturn (\r\n\t\t<div style={{overflowY:'scroll', border:'1px solid invisible', height:'500px'}}>\r\n\t\t{props.children}\r\n\t\t</div>\r\n\t\t);\r\n};\r\n\r\nexport default Scroll;","import React, {Component} from 'react'\r\n\r\nclass ErrorBoundry extends Component {\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\thasError: false\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidCatch(error, info){\r\n\t\tthis.setState({hasError: true})\r\n\r\n\t}\r\n\r\n\trender(){\r\n\t\tif (this.state.hasError){\r\n\t\t\treturn <h1>Ooooops. That is not good </h1>\r\n\t\t}\r\n\t\treturn this.props.children\r\n\t}\r\n}\r\n\r\nexport default ErrorBoundry","import React, {Component} from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundry from '../components/ErrorBoundry'\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n\tconstructor(){\r\n\t\tsuper()\r\n\t\tthis.state={\r\n\t\t\trobots: [],\r\n\t\t\tsearchfield: ''\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount (){\r\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\r\n\t\t.then(response => response.json())\r\n\t\t.then(users=> this.setState({robots: users}));\r\n\t}\r\n\tonSearchChange = (event) => {\r\n\t\t\tthis.setState({searchfield: event.target.value})\r\n\t\t\t\r\n\t}\r\n\trender(){\r\n\t\tconst {robots, searchfield} = this.state;\r\n\t\tconst filteredRobots = robots.filter(robot =>{\r\n\t\t\treturn robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n\t\t})\r\n\t\tif (!robots.length){\r\n\t\t\treturn <h1>Loading</h1>\r\n\t\t} else{\r\n\t\t\treturn (\r\n\t\t<div className='tc'>\r\n\t\t\t<h1 className='f1'>KittyFriends</h1>\r\n\t\t\t<SearchBox searchChange={this.onSearchChange} />\r\n\t\t\t<Scroll>\r\n\t\t\t\t<ErrorBoundry>\r\n\t\t\t\t\t<CardList robots={filteredRobots}/>\r\n\t\t\t\t</ErrorBoundry>\r\n\t\t\t</Scroll>\r\n\t\t</div>\r\n\t);\r\n\t\t}\r\n\t\t}\r\n\t}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\nReactDOM.render(\n  <React.StrictMode>\n  (<App/>\n    ),\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}